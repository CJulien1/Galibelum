<?php
/**
 * ActivityRepository File Doc Comment
 *
 * PHP version 7.1
 *
 * @category ActivityRepository
 * @package  Repository
 * @author   WildCodeSchool <contact@wildcodeschool.fr>
 */
namespace AppBundle\Repository;

/**
 * ActivityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @category ActivityRepository
 * @package  Repository
 * @author   WildCodeSchool <contact@wildcodeschool.fr>
 */
class ActivityRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $name
     * @param $type
     * @param $oldDate
     * @return mixed
     */
    public function search($name, $type, $oldDate)
    {

        $query = $this->createQueryBuilder('act')
            ->INNERJOIN('act.organizationActivities', 'org')
            ->INNERJOIN('act.activities', 'off')
            ->SELECT('act,org,off')
            ->GROUPBY('off')
            ->ORDERBY('act.creationDate');

        if ($name != '') {
            $query
                ->WHERE('act.name LIKE :name')
                ->ORWHERE('org.name LIKE :name')
                ->setParameter('name', '%' . $name . '%');
        }

        if ($type === 'Activité de streaming' OR $type === 'Equipe eSport' OR $type === 'Évènement eSport') {
            $query
                ->ANDWHERE('act.type LIKE :type')
                ->setParameter('type', '%' . $type . '%');
        }

       if ($oldDate != '00-00-0000')  {
            $query
                ->ANDWHERE('off.date <= 12-07-1217');

        }

        return $query->getQuery()->getResult();
    }
}

/*SELECT act.name, act.type, org.name , MIN(off.date) AS minDate,MIN(off.amount) AS minAmount, MAX(off.amount) AS maxAmount
FROM activity as act
inner join organization as org on act.organization_activities_id = org.id
inner join offer as off on act.id = off.activity_id
GROUP BY act.id*/




/*if($newdate !='') {
            $query
        ->INNERJOIN('act.activities','off');
                ->WHERE('off.date <= :newdate')
                ->setParameter('newdate', '%' . $newdate . '%');
        }*/
/*if($amount_min !=null) {
    $query
        ->WHERE('off.amount > :amount_min')
        ->ANDWHERE('off.amount < :amount_max')
        ->setParameter('amount_min', '%' . $amount_min . '%')
        ->setParameter('amount_max', '%' . $amount_max . '%');
}*/

